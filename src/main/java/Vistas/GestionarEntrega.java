/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import DAO.AlimentoDAO;
import DAO.EntregaDAO;
import Entidades.Alimento;
import Entidades.DetalleEntrega;
import Entidades.Entrega;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Laptop
 */
public class GestionarEntrega extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(GestionarEntrega.class.getName());
    
    
    
      // 1. Instanciar los DAOs
    private final AlimentoDAO alimentoDAO;
    private final EntregaDAO entregaDAO;
    private DefaultTableModel modeloAlimentosDisponibles;
    private DefaultTableModel modeloListaEntregas;

    public GestionarEntrega() {
        initComponents();
        this.alimentoDAO = new AlimentoDAO();
        this.entregaDAO = new EntregaDAO();
        
        // 2. Configurar tablas y cargar datos iniciales
        configurarTablas();
        cargarTablaAlimentosDisponibles();
        cargarTablaEntregas();
        agregarListenersTablas();
    }
    
    private void configurarTablas(){
        // Configuración para la tabla de alimentos en la pestaña "Nueva Entrega"
        modeloAlimentosDisponibles = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hace que la tabla no sea editable
            }
        };
        modeloAlimentosDisponibles.setColumnIdentifiers(new String[]{"ID", "Alimento", "Categoría", "Disponible", "Caducidad"});
        jTableAlimentosDisponibles.setModel(modeloAlimentosDisponibles);
        
        // Configuración para la tabla de entregas en la pestaña "Entregas"
        modeloListaEntregas = new DefaultTableModel(){
             @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modeloListaEntregas.setColumnIdentifiers(new String[]{"ID Entrega", "Organización", "Alimento", "Cantidad", "Fecha", "Estado", "ID Alimento"});
        jTableListaDeEntregas.setModel(modeloListaEntregas);
        
        // Ocultar la columna de ID Alimento en la tabla de entregas, la usaremos internamente
        jTableListaDeEntregas.removeColumn(jTableListaDeEntregas.getColumnModel().getColumn(6));
    }

    private void cargarTablaAlimentosDisponibles() {
        modeloAlimentosDisponibles.setRowCount(0); // Limpiar tabla
        List<Alimento> alimentos = alimentoDAO.obtenerAlimentosDisponibles();
        for (Alimento alim : alimentos) {
            modeloAlimentosDisponibles.addRow(new Object[]{
                alim.getIdAlimento(),
                alim.getNombreAlimento(),
                alim.getCategoria(),
                alim.getCantidadDisponible(),
                alim.getFechaCaducidad()
            });
        }
    }
    
    private void cargarTablaEntregas() {
        modeloListaEntregas.setRowCount(0); // Limpiar tabla
        List<Object[]> entregas = entregaDAO.obtenerEntregasParaTabla();
        for (Object[] fila : entregas) {
            modeloListaEntregas.addRow(fila);
        }
    }

    private void agregarListenersTablas() {
        // Listener para la tabla de Alimentos Disponibles
        jTableAlimentosDisponibles.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting() && jTableAlimentosDisponibles.getSelectedRow() != -1) {
                int filaSeleccionada = jTableAlimentosDisponibles.getSelectedRow();
                String idAlimento = jTableAlimentosDisponibles.getValueAt(filaSeleccionada, 0).toString();
                jTextFieldIDAlimento.setText(idAlimento);
            }
        });

        // Listener para la tabla de Lista de Entregas
        jTableListaDeEntregas.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting() && jTableListaDeEntregas.getSelectedRow() != -1) {
                int filaSeleccionada = jTableListaDeEntregas.getSelectedRow();
                String idEntrega = jTableListaDeEntregas.getValueAt(filaSeleccionada, 0).toString();
                String estado = jTableListaDeEntregas.getValueAt(filaSeleccionada, 5).toString();
                
                jTextFieldIDEntrega.setText(idEntrega);
                jComboBoxEstadoEntrega.setSelectedItem(estado);
            }
        });
    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneNuevaEntrega = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIdOrganizacion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlimentosDisponibles = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooserFechaEntrega = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIDAlimento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldCantidad = new javax.swing.JTextField();
        BtnGuardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListaDeEntregas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIDEntrega = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxEstadoEntrega = new javax.swing.JComboBox<>();
        BtnActualizar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(647, 420));

        jLabel2.setText("ID Organizacion");

        jTextFieldIdOrganizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdOrganizacionActionPerformed(evt);
            }
        });

        jTableAlimentosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAlimentosDisponibles);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Alimentos Disponibles");

        jLabel4.setText("Fecha de Entrega");

        jLabel5.setText("Estado de entrega");

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente", "En Transito", "Completado", "Cancelado" }));

        jLabel6.setText("ID Alimento");

        jLabel7.setText("Cantidad");

        BtnGuardar.setText("Guardar");
        BtnGuardar.setActionCommand("BtnGuardar");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxEstado, 0, 136, Short.MAX_VALUE)
                                    .addComponent(jTextFieldIDAlimento)
                                    .addComponent(jTextFieldCantidad)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIdOrganizacion)
                                    .addComponent(jDateChooserFechaEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(BtnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(130, 130, 130))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldIdOrganizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jDateChooserFechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldIDAlimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(BtnGuardar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPaneNuevaEntrega.addTab("Nueva Entrega", jPanel1);

        jTableListaDeEntregas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableListaDeEntregas);

        jLabel1.setText("ID Entrega");

        jTextFieldIDEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDEntregaActionPerformed(evt);
            }
        });

        jLabel8.setText("Estado");

        jComboBoxEstadoEntrega.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente", "En Transito", "Completado", "Cancelado" }));

        BtnActualizar.setText("Actualizar");
        BtnActualizar.setActionCommand("BtnActualizar");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });

        BtnEliminar.setText("Eliminar");
        BtnEliminar.setActionCommand("BtnEliminar");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEstadoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnEliminar)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIDEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBoxEstadoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnActualizar)
                    .addComponent(BtnEliminar))
                .addGap(20, 20, 20))
        );

        jTabbedPaneNuevaEntrega.addTab("Entregas", jPanel2);

        jMenu1.setText("Menu");
        jMenu1.setActionCommand("BtnMenu");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Donador");
        jMenu2.setActionCommand("BtnDonador");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Alimento");
        jMenu3.setActionCommand("BtnAlimento");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Organizacion");
        jMenu4.setActionCommand("BtnOrganizacion");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneNuevaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneNuevaEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
        // TODO add your handling code here:
         // 1. Validar Entradas
        if (jTextFieldIdOrganizacion.getText().trim().isEmpty() || 
            jTextFieldIDAlimento.getText().trim().isEmpty() ||
            jTextFieldCantidad.getText().trim().isEmpty() ||
            jDateChooserFechaEntrega.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int idOrg = Integer.parseInt(jTextFieldIdOrganizacion.getText().trim());
            int idAlim = Integer.parseInt(jTextFieldIDAlimento.getText().trim());
            double cantidad = Double.parseDouble(jTextFieldCantidad.getText().trim());
            Date fecha = jDateChooserFechaEntrega.getDate();
            String estado = jComboBoxEstado.getSelectedItem().toString();
            
            double cantidadDisponible = (double) jTableAlimentosDisponibles.getValueAt(jTableAlimentosDisponibles.getSelectedRow(), 3);
            if (cantidad <= 0 || cantidad > cantidadDisponible) {
                JOptionPane.showMessageDialog(this, "La cantidad no es válida.", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 2. Crear objetos
            Entrega entrega = new Entrega();
            entrega.setIdOrganizacion(idOrg);
            entrega.setFechaEntrega((java.sql.Date) fecha);
            entrega.setEstadoEntrega(estado.toLowerCase());

            DetalleEntrega detalle = new DetalleEntrega();
            detalle.setIdAlimento(idAlim);
            detalle.setCantidadEntregada(cantidad);

            // 3. Llamar al DAO
            if (entregaDAO.registrarEntregaCompleta(entrega, detalle)) {
                JOptionPane.showMessageDialog(this, "Entrega registrada.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                // 4. Actualizar GUI
                cargarTablaAlimentosDisponibles();
                cargarTablaEntregas();
                jTextFieldIDAlimento.setText("");
                jTextFieldCantidad.setText("");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los IDs y la cantidad deben ser números válidos.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
        // TODO add your handling code here:
         if (jTextFieldIDEntrega.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione una entrega de la tabla para actualizar.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int idEntrega = Integer.parseInt(jTextFieldIDEntrega.getText());
        String nuevoEstado = jComboBoxEstadoEntrega.getSelectedItem().toString().toLowerCase();

        if (entregaDAO.actualizarEstado(idEntrega, nuevoEstado)) {
            JOptionPane.showMessageDialog(this, "Estado actualizado.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            cargarTablaEntregas(); // Recargar para ver el cambio
        } else {
             JOptionPane.showMessageDialog(this, "No se pudo actualizar el estado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void jTextFieldIDEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDEntregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDEntregaActionPerformed

    private void jTextFieldIdOrganizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdOrganizacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdOrganizacionActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTableListaDeEntregas.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una entrega de la tabla para cancelar.", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Preguntar al usuario si está seguro
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea cancelar esta entrega? La cantidad será devuelta al inventario.", "Confirmar Cancelación", JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {
            int idEntrega = (int) modeloListaEntregas.getValueAt(filaSeleccionada, 0);
            double cantidad = (double) modeloListaEntregas.getValueAt(filaSeleccionada, 3);
            // El ID del alimento está en la columna 6 (que está oculta pero accesible desde el modelo)
            int idAlimento = (int) modeloListaEntregas.getValueAt(filaSeleccionada, 6);

            if (entregaDAO.cancelarEntrega(idEntrega, idAlimento, cantidad)) {
                JOptionPane.showMessageDialog(this, "Entrega cancelada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                cargarTablaEntregas();
                cargarTablaAlimentosDisponibles(); // El stock cambió
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo cancelar la entrega.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GestionarEntrega().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JComboBox<String> jComboBoxEstado;
    private javax.swing.JComboBox<String> jComboBoxEstadoEntrega;
    private com.toedter.calendar.JDateChooser jDateChooserFechaEntrega;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPaneNuevaEntrega;
    private javax.swing.JTable jTableAlimentosDisponibles;
    private javax.swing.JTable jTableListaDeEntregas;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldIDAlimento;
    private javax.swing.JTextField jTextFieldIDEntrega;
    private javax.swing.JTextField jTextFieldIdOrganizacion;
    // End of variables declaration//GEN-END:variables
}
